<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Build Personal Website with Hexo and GitHub Pages on Mac</title>
    <link href="/Build-Personal-Websiite-with-Hexo-and-GitHub-Pages-on-Mac/"/>
    <url>/Build-Personal-Websiite-with-Hexo-and-GitHub-Pages-on-Mac/</url>
    
    <content type="html"><![CDATA[<p><strong>Knock on new home’s door.</strong></p><blockquote><p>In this post:  </p><ul><li><p>Outline of how to build a personal blog</p></li><li><p>Useful links for reference</p></li></ul></blockquote><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>It has been long time since I would like to own a particular space to record my life, and until now I’ve finally started creating my personal website here. Among a varitey of schemes, I opt to <strong>Hexo + GitHub Pages</strong>, which is friendly to noob like me.  </p><p><a href="https://hexo.io/"><strong>Hexo</strong></a> is a fast, simple &amp; powerful blog framework. Simply write post in Markdown and Hexo generates static files deployed to GitHub Pages.  </p><p>As the first post, I am writing this article just in case anyone who is also interested in having a personal website but hasn’t been prepared yet. On the other hand, it will be an importent reference for myself to re-create the environment efficiently when I change the Mac or migrate data in the future.  </p><h3 id="Environment-setup"><a href="#Environment-setup" class="headerlink" title="Environment setup"></a>Environment setup</h3><p>Install Homebrew  </p><div class="code-wrapper"><pre><code class="hljs bash">/bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubsuercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></code></pre></div><p>Install Node.js  </p><div class="code-wrapper"><pre><code class="hljs bash">brew install node</code></pre></div><p>Install Git  </p><div class="code-wrapper"><pre><code class="hljs bash">brew install git</code></pre></div><p>Install Hexo  </p><div class="code-wrapper"><pre><code class="hljs bash">npm install -g hexo-cli</code></pre></div><h3 id="Initialize-Hexo"><a href="#Initialize-Hexo" class="headerlink" title="Initialize Hexo"></a>Initialize Hexo</h3><p>Once Hexo is installed, create a new folder for Hexo, and keep in mind the <code>&lt;path&gt;</code>.  </p><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> &lt;path&gt;<span class="hljs-comment"># enter target folder</span>hexo init <span class="hljs-comment"># initialize Hexo</span></code></pre></div><p>We can see essential folders&#x2F;files are generatred. And <strong>_config.yml</strong> is the “site config” file in Hexo root dict, personalize the top contents when required.  </p><p>Here are some basic commands to compile Hexo below.  </p><div class="code-wrapper"><pre><code class="hljs bash">hexo clean<span class="hljs-comment"># clear the static files and cache</span>hexo g<span class="hljs-comment"># generate static web files locally</span>hexo s<span class="hljs-comment"># start a local sever for preview</span>hexo d<span class="hljs-comment"># deploy after generation finish</span></code></pre></div><h3 id="Deploy-GitHub-Pages"><a href="#Deploy-GitHub-Pages" class="headerlink" title="Deploy GitHub Pages"></a>Deploy GitHub Pages</h3><p>Create a repo in GitHub named as <strong>username.github.io</strong>.  </p><p>Add SHH key to GitHub account.  </p><div class="code-wrapper"><pre><code class="hljs bash">git config --glabal user.name <span class="hljs-string">&quot;username&quot;</span>git config --global user.email <span class="hljs-string">&quot;example@example.com&quot;</span></code></pre></div><p>Then generate SHH key.  </p><div class="code-wrapper"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;example@example.com&quot;</span></code></pre></div><p>Find a <strong>id_ras.pub</strong> file under dict <strong>&#x2F;User&#x2F;.ssh&#x2F;id_rsa.pub</strong>.  </p><p>Open <strong>id_ras.pub</strong> with TextEdit, and copy&#x2F;paste to Github account setting.</p><p>Check if successful.  </p><div class="code-wrapper"><pre><code class="hljs bash">ssh -T git@github.com</code></pre></div><p>Install deployer plugin.  </p><div class="code-wrapper"><pre><code class="hljs bash">npm install hexo-deployer-git --save</code></pre></div><p>Open <strong>_config.yml</strong> with TextEdit and scroll down to the bottom, modify as below.  </p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><span class="hljs-attr">deploy:</span>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/username/username.github.io.git</span>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span></code></pre></div><p>Deploy to GitHub Pages.  </p><div class="code-wrapper"><pre><code class="hljs bash">hexo cleanhexo g --d</code></pre></div><p><strong>Now we can login our personal website using username.github.io</strong> <span class="github-emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">&#x1f389;</span>  </p><h3 id="Personalize-domain"><a href="#Personalize-domain" class="headerlink" title="Personalize domain"></a>Personalize domain</h3><p>It should be much cooler if we could have a custom domain. On top of <strong>GitHub Pages</strong>, my scheme is <strong>GoDaddy + Cloudflare</strong> - cheap, save and accessible.  </p><p>Here are the brief steps:  </p><p><strong>Step 1: Buy a domian from <a href="https://www.godaddy.com/en-uk">GoDaddy</a></strong>  </p><p><strong>Step 2: DNS management by <a href="https://www.cloudflare.com/">Cloudflare</a></strong>  </p><ul><li>Change to Cloudflare-branded nameservers  </li><li>Add DNS records with the <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site"><strong>IP adresses for GitHub Pages</strong></a></li></ul><p><strong>Step 3: GitHub custom domain</strong>  </p><p><strong>Step 4: HTTPS &amp; SSL encryption</strong>  </p><ul><li>Page Rules set as “Always Use HTTPS”  </li><li>SSL&#x2F;TLS encryption set as “Full”  </li><li>Tick “Always Use HTTPS” under Edge Certificates</li></ul><p><strong>Now we can login our personal website using custom domain</strong> <span class="github-emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">&#x1f389;</span> <span class="github-emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">&#x1f389;</span>  </p><h3 id="Customize-Hexo-theme"><a href="#Customize-Hexo-theme" class="headerlink" title="Customize Hexo theme"></a>Customize Hexo theme</h3><p>Select a <a href="https://hexo.io/themes/"><strong>Hexo theme</strong></a>, and make our blog more pretty.</p><p>I prefer <a href="https://hexo.io/themes/"><strong>Fluid</strong></a>, an elegant Material-Design theme, particularly for writing posts. If you favour the other theme, the configuration method should be similar.</p><p>Download Fluid.  </p><div class="code-wrapper"><pre><code class="hljs bash">npm install --save hexo-theme-fluid</code></pre></div><p>Then <strong>_config.fluid.yml</strong> in root dict is created for custom.  </p><p>Modify <strong>_config.yml</strong> in root dict as follows to start theme.  </p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span></code></pre></div><p>Creating the About Page.  </p><div class="code-wrapper"><pre><code class="hljs bash">hexo new page about</code></pre></div><p>For more configuration, please refer to <a href="https://hexo.fluid-dev.com/docs/en/start/"><strong>Hexo Fluid Docs</strong></a>.  </p><br/><p><strong>Keep on carving!</strong></p>]]></content>
    
    
    <categories>
      
      <category>Computer</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
